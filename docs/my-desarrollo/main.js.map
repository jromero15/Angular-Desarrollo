{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/componentes/dashboard/dashboard.component.css","webpack:///./src/app/componentes/dashboard/dashboard.component.html","webpack:///./src/app/componentes/dashboard/dashboard.component.ts","webpack:///./src/app/componentes/mapa/mapa.component.css","webpack:///./src/app/componentes/mapa/mapa.component.html","webpack:///./src/app/componentes/mapa/mapa.component.ts","webpack:///./src/app/componentes/tabla/tabla.component.css","webpack:///./src/app/componentes/tabla/tabla.component.html","webpack:///./src/app/componentes/tabla/tabla.component.ts","webpack:///./src/app/componentes/tabla/tabla.service.ts","webpack:///./src/app/routing.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"html, body {\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.container {\\r\\n    margin: 30px auto;\\r\\n    background-color: #ccc;\\r\\n    padding: 20px;\\r\\n    height: 280px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { RoutingModule } from './routing.module';\nimport { DashboardComponent } from './componentes/dashboard/dashboard.component';\nimport { MapaComponent } from './componentes/mapa/mapa.component';\nimport { TablaComponent } from './componentes/tabla/tabla.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    MapaComponent,\n    TablaComponent\n  ],\n  imports: [\n    BrowserModule,\n    RoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".container .row div {\\r\\n    display:inline-block;\\r\\n    margin: auto 10px;\\r\\n}\\r\\n\\r\\n.my-img{\\r\\n    width: 177px;\\r\\n    height: 150px;\\r\\n    background-image: url('http://fondopantalla.com.es/file/90/600x338/16:9/imgen-panor%C3%A1mica-golden-gate_2004894496.jpg');\\r\\n    background-size: contain;\\r\\n    background-repeat: no-repeat;\\r\\n    background-position: center;\\r\\n    position: absolute;\\r\\n    top: -39px;\\r\\n    text-align: center;\\r\\n    border-radius: 5px;\\r\\n    \\r\\n\\r\\n}\\r\\n\\r\\n.father {\\r\\n    background-color: #fff;\\r\\n    position: relative;\\r\\n    height: 150px;\\r\\n    width: 204px;\\r\\n    margin: 0.8em;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.card {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.legenda{\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    min-width: 100px;\\r\\n    text-align: center;\\r\\n    left: 50px;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\" id=\\\"fila\\\">\\n    <div class=\\\"col-lg-2 father card\\\" routerLink=\\\"/mapa\\\">\\n      <div class=\\\"my-img\\\"></div>\\n      <p class=\\\"legenda\\\">Mapa</p>\\n    </div>\\n    <div class=\\\"col-lg-2 father card\\\" routerLink=\\\"/registros\\\">\\n        <div class=\\\"my-img\\\"></div>\\n        <p class=\\\"legenda\\\">Tabla</p>\\n    </div>\\n    <div class=\\\"col-lg-2 father\\\">\\n      <div class=\\\"my-img\\\"></div>\\n    </div>\\n    <div class=\\\"col-lg-2 father\\\">\\n        <div class=\\\"my-img\\\"></div>\\n    </div>\\n    <div class=\\\"col-lg-2 father\\\">\\n        <div class=\\\"my-img\\\"></div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  Mapa\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mapa',\n  templateUrl: './mapa.component.html',\n  styleUrls: ['./mapa.component.css']\n})\nexport class MapaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n","module.exports = \".registros {\\r\\n     border:1px solid black;\\r\\n     margin: auto;\\r\\n     \\r\\n}\\r\\n\\r\\n.registros th {\\r\\n    text-align: center;\\r\\n    background: red;;\\r\\n    color: white;\\r\\n    padding: 10px;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.registros td {\\r\\n    border-collapse: collapse;\\r\\n    padding: 8px;\\r\\n    border:1px solid black;\\r\\n    width: 10%;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.containertab {\\r\\n    margin: 30px auto;\\r\\n    background: white;\\r\\n    padding: 20px;\\r\\n    border:1px dashed red;;\\r\\n\\r\\n}\\r\\n\\r\\n.perfil{\\r\\n    color: white;\\r\\n    font-size: 20px;\\r\\n    background: purple;\\r\\n    height: 60px;\\r\\n    border-radius: 5px;\\r\\n}\"","module.exports = \"<p class=\\\"perfil\\\">Perfiles</p>\\n<div class=\\\"containertab\\\">\\n  <table class=\\\"registros\\\">\\n    <thead>\\n      <tr>\\n        <th>Id</th>\\n        <th>Nombre</th>\\n        <th>Apellido</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let registro of datosTabla\\\">\\n        <td>\\n          {{ registro.id }}\\n        </td>\\n        <td>\\n          {{ registro.firstName }}\\n        </td>\\n        <td>\\n          {{ registro.lastName }}\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TablaService } from './tabla.service';\n\n@Component({\n  selector: 'app-tabla',\n  templateUrl: './tabla.component.html',\n  styleUrls: ['./tabla.component.css']\n})\nexport class TablaComponent implements OnInit {\n\n  datosTabla;\n\n  constructor(private tablaService: TablaService) { }\n\n  ngOnInit() {\n    this.tablaService.getDatos()\n    .subscribe((datos) => {\n      this.datosTabla = datos;\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TablaService {\n\n  URL_DATOS = '/assets/data.json';\n  \n  constructor(private http: HttpClient) { }\n\n  public getDatos(): Observable<any> {\n    return this.http.get(this.URL_DATOS);\n  }\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DashboardComponent } from \"./componentes/dashboard/dashboard.component\";\r\nimport { MapaComponent } from \"./componentes/mapa/mapa.component\";\r\nimport { TablaComponent } from \"./componentes/tabla/tabla.component\";\r\n\r\nconst ROUTES: Routes = [\r\n    {\r\n        path: '',\r\n        component: DashboardComponent,\r\n    },\r\n    {\r\n        path: 'mapa',\r\n        component: MapaComponent\r\n    },\r\n    {\r\n        path: 'registros',\r\n        component: TablaComponent\r\n    },\r\n    {\r\n        path: '**',\r\n        component: DashboardComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n    RouterModule.forRoot(ROUTES)\r\n    ],\r\n    exports: [\r\n    RouterModule\r\n    ]\r\n    })\r\n    export class RoutingModule { }\r\n    ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}